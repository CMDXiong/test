<!DOCTYPE CXXDOC SYSTEM "cxxdoc.dtd">
<CXXDOC>

<CLASS 
	TYPE="NORMAL"
	TEMPLATE="NO"
	DECLARATION="class KEY_string_in"
>

<META-DATA>
	<NAME>KEY_string_in</NAME>
	<AUTHOR>klaas</AUTHOR>
	<VERSION>1.0</VERSION>
	<DATE>Thu Oct 14 13:41:35 MET 1999</DATE>
	<REVISION-HISTORY>
		<REVISION>
			<AUTHOR></AUTHOR>
			<VERSION></VERSION>
			<DATE></DATE>
		</REVISION>
	</REVISION-HISTORY>
</META-DATA>



<HEADER-FILES>
	<HEADER-FILE>
		<NAME>misc.h</NAME>
	</HEADER-FILE>
	<HEADER-FILE>
		<NAME>gdsdef.h</NAME>
	</HEADER-FILE>
	<HEADER-FILE>
		<NAME>gdserr.h</NAME>
	</HEADER-FILE>
	<HEADER-FILE>
		<NAME>lsetup.h</NAME>
	</HEADER-FILE>
	<HEADER-FILE>
		<NAME>alias.h</NAME>
	</HEADER-FILE>
	<HEADER-FILE>
		<NAME>_lnk_itr.h</NAME>
	</HEADER-FILE>
	<HEADER-FILE>
		<NAME>cparser.h</NAME>
	</HEADER-FILE>
	<HEADER-FILE>
		<NAME>proper.h</NAME>
	</HEADER-FILE>
</HEADER-FILES>



<CODE-FILES>
	<CODE-FILE>
		<NAME></NAME>
	</CODE-FILE>
</CODE-FILES>

<DESCRIPTION>
	<PARA> Input driver for KEY strings (the string contains KEY records)</PARA>
			<PARA> only the following primitives can be added this way 	&lt;element&gt;			::=	&lt;boundary&gt; </PARA>
			<PARA> &lt;path&gt; </PARA>
			<PARA> &lt;circle&gt; </PARA>
			<PARA> &lt;arc&gt; </PARA>
			<PARA>&lt;text&gt; </PARA>
			<PARA> &lt;node&gt; </PARA>
			<PARA> &lt;box&gt; 									 </PARA>
			<PARA> 									ENDEL    </PARA>
			<PARA> see base class</PARA>
</DESCRIPTION>

<INHERITANCE>
	<PARENT-CLASS
		SCOPE="public"
		VIRTUAL="STANDARD"
	>
		<NAME>KEY_parser</NAME>
	</PARENT-CLASS>
	<PARENT-CLASS
		SCOPE="public"
		VIRTUAL="STANDARD"
	>
		<NAME>CommandParser</NAME>
	</PARENT-CLASS>
	<PARENT-CLASS
		SCOPE="public"
		VIRTUAL="STANDARD"
	>
		<NAME>ostrstream</NAME>
	</PARENT-CLASS>
</INHERITANCE>





<MEMBER-FUNCTIONS>
	<MEMBER-FUNCTION
		SCOPE="PUBLIC"
		VIRTUAL="STANDARD"
		PURPOSE="NORMAL"
		TYPE="BASIC"
		TYPENAME="NONE"
		DECLARATION="KEY_string_in(Setup* setup, AliasList* aliaslist, double factor)"
		INLINE="NO"
	>
		<NAME>KEY_string_in</NAME>
		
		
		<DESCRIPTION>
			<PARA> constructor</PARA>
		</DESCRIPTION>
	</MEMBER-FUNCTION>
	<MEMBER-FUNCTION
		SCOPE="PUBLIC"
		VIRTUAL="STANDARD"
		PURPOSE="NORMAL"
		TYPE="BASIC"
		TYPENAME="NONE"
		DECLARATION="~KEY_string_in()"
		INLINE="NO"
	>
		<NAME>~KEY_string_in</NAME>
		
		
		<DESCRIPTION>
			<PARA> destructor</PARA>
		</DESCRIPTION>
	</MEMBER-FUNCTION>
	<MEMBER-FUNCTION
		SCOPE="PUBLIC"
		VIRTUAL="STANDARD"
		PURPOSE="NORMAL"
		TYPE="BASIC"
		TYPENAME="G_BOOL "
		DECLARATION="G_BOOL Insert(GdsII* _GdsII,char* string)"
		INLINE="NO"
	>
		<NAME>Insert</NAME>
		
		
		<DESCRIPTION>
			<PARA>add the KEY data in string to the internal database</PARA>
		</DESCRIPTION>
	</MEMBER-FUNCTION>




	<MEMBER-FUNCTION
		SCOPE="PROTECTED"
		VIRTUAL="STANDARD"
		PURPOSE="NORMAL"
		TYPE="BASIC"
		TYPENAME="G_BOOL "
		DECLARATION="G_BOOL ReadItem(char* type)"
		INLINE="NO"
	>
		<NAME>ReadItem</NAME>
		
		
		<DESCRIPTION>
			<PARA></PARA>
		</DESCRIPTION>
	</MEMBER-FUNCTION>
	<MEMBER-FUNCTION
		SCOPE="PROTECTED"
		VIRTUAL="STANDARD"
		PURPOSE="NORMAL"
		TYPE="BASIC"
		TYPENAME="void "
		DECLARATION="void IncC()"
		INLINE="NO"
	>
		<NAME>IncC</NAME>
		
		
		<DESCRIPTION>
			<PARA>read next character</PARA>
		</DESCRIPTION>
	</MEMBER-FUNCTION>
	<MEMBER-FUNCTION
		SCOPE="PROTECTED"
		VIRTUAL="STANDARD"
		PURPOSE="NORMAL"
		TYPE="BASIC"
		TYPENAME="char "
		DECLARATION="char PeekNextC()"
		INLINE="NO"
	>
		<NAME>PeekNextC</NAME>
		
		
		<DESCRIPTION>
			<PARA>to evaluate alias strings</PARA>
		</DESCRIPTION>
	</MEMBER-FUNCTION>
</MEMBER-FUNCTIONS>

<MEMBERS>




	<MEMBER
		SCOPE="PROTECTED"
		VIRTUAL="STANDARD"
		TYPE="BASIC"
		TYPENAME="AliasList*	"
		DECLARATION="AliasList*	_aliaslist"
	>
		<NAME>_aliaslist</NAME>
		<DESCRIPTION>
			<PARA>to evaluate alias strings</PARA>
		</DESCRIPTION>
	</MEMBER>
	<MEMBER
		SCOPE="PROTECTED"
		VIRTUAL="STANDARD"
		TYPE="BASIC"
		TYPENAME="char*	"
		DECLARATION="char*	_commands"
	>
		<NAME>_commands</NAME>
		<DESCRIPTION>
			<PARA>buffer for the string to evaluate</PARA>
		</DESCRIPTION>
	</MEMBER>
	<MEMBER
		SCOPE="PROTECTED"
		VIRTUAL="STANDARD"
		TYPE="BASIC"
		TYPENAME="char* "
		DECLARATION="char* _c"
	>
		<NAME>_c</NAME>
		<DESCRIPTION>
			<PARA>current character</PARA>
		</DESCRIPTION>
	</MEMBER>
</MEMBERS>


</CLASS>
</CXXDOC>

